K 8 const 1
K 1 int 1
I 1 maxn 1
P 11 = 1
C1 1 1000 1
P 13 ; 1
K 1 int 2
I 2 a 2
P 17 [ 2
I 2 maxn 2
P 18 ] 2
P 13 ; 2
K 1 int 3
I 2 a 3
P 12 , 3
I 3 b 3
P 12 , 3
I 4 c 3
P 12 , 3
I 5 d 3
P 12 , 3
I 6 arr 3
P 13 ; 3
K 15 char 4
I 7 str 4
P 13 ; 4
K 1 int 6
I 8 get_max 6
P 3 ( 6
P 4 ) 6
P 15 { 7
K 1 int 8
I 9 ans 8
P 11 = 8
C1 2 0 8
P 13 ; 8
K 10 for 9
P 3 ( 9
K 1 int 9
I 10 i 9
P 11 = 9
C1 2 0 9
P 13 ; 9
I 10 i 9
P 7 < 9
I 10 maxn 9
P 13 ; 9
I 10 i 9
P 11 = 9
I 10 i 9
P 8 + 9
C1 3 1 9
P 4 ) 9
P 15 { 10
K 12 if 11
P 3 ( 11
I 10 ans 11
P 7 < 11
I 10 arr 11
P 17 [ 11
I 10 i 11
P 18 ] 11
P 4 ) 11
P 15 { 12
I 10 ans 13
P 11 = 13
I 10 arr 13
P 17 [ 13
I 10 i 13
P 18 ] 13
P 13 ; 13
P 16 } 14
P 16 } 15
K 11 return 16
I 10 ans 16
P 13 ; 16
P 16 } 17
K 1 int 19
I 11 main 19
P 3 ( 19
P 4 ) 19
P 15 { 20
I 11 a 21
P 11 = 21
I 11 get_max 21
P 3 ( 21
P 4 ) 21
P 13 ; 21
I 11 arr 22
P 17 [ 22
C1 4 50 22
P 18 ] 22
P 11 = 22
C1 5 10000 22
P 13 ; 22
I 11 b 23
P 11 = 23
I 11 get_max 23
P 3 ( 23
P 4 ) 23
P 13 ; 23
K 5 while 24
P 3 ( 24
I 11 a 24
P 4 ) 24
P 15 { 25
I 11 b 26
P 11 = 26
I 11 b 26
P 1 - 26
C1 5 1 26
P 13 ; 26
P 16 } 27
K 5 while 28
P 3 ( 28
I 11 b 28
P 4 ) 28
P 15 { 29
I 11 c 30
P 11 = 30
I 11 c 30
P 8 + 30
C1 5 1 30
P 13 ; 30
P 16 } 31
K 12 if 32
P 3 ( 32
I 11 c 32
P 7 < 32
C1 6 100 32
P 4 ) 32
P 15 { 33
I 11 d 34
P 11 = 34
C1 7 10 34
P 13 ; 34
P 16 } 35
K 11 return 38
C1 7 0 38
P 13 ; 38
P 16 } 39
